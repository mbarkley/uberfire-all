<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012 JBoss Inc
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.uberfire</groupId>
    <artifactId>uberfire</artifactId>
    <version>0.1-SNAPSHOT</version>
  </parent>

  <artifactId>uberfire-workbench</artifactId>
	<packaging>jar</packaging>

	<name>ÜberFire Workbench</name>
	<description>ÜberFire Workbench</description>

	<dependencies>

		<dependency>
			<groupId>org.uberfire</groupId>
			<artifactId>uberfire-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.uberfire</groupId>
			<artifactId>uberfire-annotations-processors</artifactId>
		</dependency>

    <!-- CDI Integration Modules -->
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-cdi-client</artifactId>
    </dependency>

    <!-- Errai IoC -->

		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-ioc</artifactId>
		</dependency>

    <!-- Errai ui binder -->
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-uibinder</artifactId>
    </dependency>

    <!-- GWT and GWT Extensions -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.allen-sauer.gwt.dnd</groupId>
			<artifactId>gwt-dnd</artifactId>
		</dependency>

	</dependencies>

	<build>
		<!-- ****************************** NOTE ******************************************* -->
		<!-- We have to build a PROJECT.jar containing all source files for child -->
		<!-- GWT modules to later compile. gwt-maven-plugin switch "compileSourcesArtifacts" -->
		<!-- in the child GWT module should pull -sources.jars into the build. -->
		<!-- However there are reports this does not currently work (IDK, I've -->
		<!-- not tried!) in other Guvnor poms. -->
		<!-- See http://mojo.codehaus.org/gwt-maven-plugin/user-guide/library.html -->
		<!-- ******************************************************************************* -->

		<!-- Include all of the various types GWT considers "source" so "child" -->
		<!-- GWT modules can successfully be (GWT) compiled. Failure to included -->
		<!-- these in the resulting JAR causes GWT compilation errors -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.css</include>
					<include>**/*.png</include>
					<include>**/*.gif</include>
					<include>**/*.java</include>
					<include>**/*.gwt.xml</include>
					<include>**/*.ui.xml</include>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
			</resource>
		</resources>

		<plugins>

			<!-- We need source files generated by our Java Annotations Processor -->
			<!-- in the resulting JAR for GWT to reference in child projects. Consequentially -->
			<!-- copy the source files to the target folder before packaging -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes</outputDirectory>
							<resources>
								<resource>
									<directory>target/generated-sources/annotations</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

</project>