/*
 * Copyright 2012 JBoss Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.uberfire.annotations.processors;

import javax.annotation.Generated;
import javax.enterprise.context.Dependent;
import javax.inject.Inject;

import org.uberfire.client.annotations.Identifier;
import org.uberfire.client.mvp.AbstractScreenActivity;
import org.uberfire.client.mvp.ScreenService;

import com.google.gwt.user.client.ui.IsWidget;

@Dependent
@Generated("org.uberfire.annotations.processors.WorkbenchScreenProcessor")
@Identifier("test7")
/*
 * WARNING! This class is generated. Do not modify.
 */
public class WorkbenchScreenTest7Activity extends AbstractScreenActivity
    implements
    ScreenService {

    @Inject
    private WorkbenchScreenTest7 realPresenter;

    @Override
    public String getIdentifier() {
        return "test7";
    }

    @Override
    public void onStart() {
        //Do nothing. The real presenter does not have a @OnStart annotation
    }

    @Override
    public boolean onMayClose() {
        return true;
    }

    @Override
    public void onClose() {
        //Do nothing. The real presenter does not have a @OnClose annotation
    }

    @Override
    public void onReveal() {
        //Do nothing. The real presenter does not have a @OnReveal annotation
    }

    @Override
    public void onLostFocus() {
        //Do nothing. The real presenter does not have a @OnLostFocus annotation
    }

    @Override
    public void onFocus() {
        //Do nothing. The real presenter does not have a @OnFocus annotation
    }

    @Override
    public String getTitle() {
        return realPresenter.getTitle();
    }

    @Override
    public IsWidget getWidget() {
        return realPresenter.getView();
    }
    
    @Override
    public ScreenService getPresenter() {
        return this;
    }

}
